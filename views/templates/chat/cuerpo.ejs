<ul class="chat w3-card-2" data-ng-controller="chatController">

  <li class="header">

    <h3><span class="text"><%= __("chat.onlineContacts") %></span> <span class="icon"><i class="material-icons">&#xE853;</i></span> <i class="material-icons toggle-expand expandir">&#xE5CE;</i>     <i data-ng-if="unseenMsgs() > 0" class="material-icons msg-badge scale-fade-in">&#xE0E1;</i></h3>
  </li>

  <li class="user " data-ng-repeat="(k,user) in users" data-ng-click="chatWith(user)">
    <span class="username">{{user.username}}</span>
    <span class="unread" data-ng-if="getUnreadMsgs(user) > 0" data-ng-bind="getUnreadMsgs(user)">
    </span>
  </li>
  <li class="empty user "  data-ng-if="!users || isEmpty(users)">
    <%= __("chat.sinUsuarios")%>
  </li>
</ul>

<div class="conversacion chat w3-card-2 slide-top" data-ng-if="chat">
  <header class="header">
    <h3>{{chat.user.username}} <span data-ng-click="backToContacts()" class="back"><i class="material-icons">&#xE317;</i></span></h3>

  </header>
  <ul >
    <li class="scale-fade"   data-ng-class="msg.from == '<%= user.id %>' ? 'me' : 'destinatary'" data-ng-repeat="msg in chat.messages">

      <p class="msg">
        <span class="time">
          <span class="username" data-ng-if="msg.from == '<%= user.id %>'"><%= __('me') %></span>
          <span class="username" data-ng-if="msg.from != '<%= user.id %>'" data-ng-bind="users[msg.from].username"></span>
          -
          <span class="date" data-ng-bind="getTimeFormated(msg.time)"></span>
          <i data-ng-if="msg.seen && msg.from == '<%= user.id %>'" class="material-icons seen scale-fade" ng-attr-title="Visto {{getTimeFormated(msg.seen)}}">&#xE417;</i></span>

        <span data-ng-bind-html="msg.text | unsafe"></span>
      </p>
    </li>

  </ul>

  <footer class="write-box">
    <div  data-ng-keypress="sendMsg(chat.user,$event)" class="text" contenteditable data-placeholder ="<%= __("chat.writePlaceholder") %>">

    </div>
    <span class="controls">

      <div class="w3-left">
        <span class="control file">
          <input type="file" multiple name="file" id="file-send">
          <i class="material-icons">&#xE2C3;</i>
        </span>
      </div>

      <div class="w3-right">
        <span data-ng-click="sendMsg(chat.user)" class="enviar control"><i class="material-icons">&#xE163;</i></span>
      </div>

    </span>
  </footer>
</div>



<script>

  var scope;
  app.controller('chatController', function($rootScope,$http) {
    scope = $rootScope;
    $rootScope.users={};
    $rootScope.chats ={};
$rootScope.unseenMsgs=function () {
  var unseenMsg= 0;
  for (var k in $rootScope.chats)
  {

      unseenMsg+=$rootScope.getUnreadMsgs({id:k});


  }
  return unseenMsg;

}
    $(document).on("change","#file-send", function () {

  var _files=$(this)[0].files;
      var files=[];

      angular.forEach(_files,function (v,k) {

        files.push({file:v,name:v.name});
      });


      var fileUpload=function () {
        if(files.length==0)
        {
          return false;
        }

        var formdata = new FormData();
        var file =files.shift();
        //console.log(file);
        formdata.append('file', file.file);
        //formdata.append('name', );

        var request = {
          method: 'POST',
          url: '/file?name='+file.name,
          data: formdata,
          headers: {
            'Content-Type': undefined
          }
        };

        $http(request)
          .then(function (res) {
            console.log(res);

            var html="<br><div class='file-preview'>";

            switch (res.data[0].type)
            {
              case 'image':
                html+= "<img src='/file/"+res.data[0].url+"'>";
                html+="<span class='name'>"+res.data[0].name+"</span>"
                html+="<div class='icons'>";
                html+="<a target='_blank' class='download' download href='/file/"+res.data[0].url+"'><i class='material-icons'>&#xE2C4;</i></a>";
                html+="</div>"
                    break;
              case 'video':
                html+= "<video controls src='/file/"+res.data[0].url+"'></video>";
                html+="<span class='name'>"+res.data[0].name+"</span>"
                html+="<div class='icons'>";
                html+="<a target='_blank' class='download' download href='/file/"+res.data[0].url+"'><i class='material-icons'>&#xE2C4;</i></a>";
                html+="</div>"
                    break;
              default:

                html+="<span class='name'>"+res.data[0].name;
                html+="<div class='icons default'>";
                html+="<a target='_blank' class='download' download href='/file/"+res.data[0].url+"'><i class='material-icons'>&#xE2C4;</i></a>";
                html+="</div>"
                html+"</span>";
                    break;
            }
             html+="</div>";
            document.getElementById("file-send").value = "";

            $("[contenteditable]").append(html);

            fileUpload();
          },error);

      }

      fileUpload();


    });



    $rootScope.getTimeFormated=function (time) {
      var date = new Date(time*1000);

      return date.toLocaleString();

    }
    $rootScope.getUnreadMsgs=function (user) {

      if($rootScope.chats[user.id])
      {
        return  $rootScope.chats[user.id].messages.filter(function (el) {
          return (!el.seen || el.seen == false ) && el.from != '<%= user.id %>';
        }).length;
      }
      return 0;

    }
    $rootScope.backToContacts=function () {

      $rootScope.chat=null;

    }

    $rootScope.chatWith=function (user) {

      if(!$rootScope.chats[user.id] )
      {
        $rootScope.chats[user.id]={messages:[],user:user};
      }
      $rootScope.chat = $rootScope.chats[user.id];

      goToChatBottom();
      //clavo el visto
      $rootScope.markAsSeen($rootScope.chat);

    }
    document.addEventListener("visibilitychange",function(){

      if($rootScope.chat)
      {
        $rootScope.markAsSeen($rootScope.chat);
        goToChatBottom();
      }

    });

    $rootScope.markAsSeen=function (chat) {

      if(chat.messages)
      {
        var msgs = chat.messages;
        var seen=[];

        for(var k in msgs)
        {
          if(!msgs[k].seen && msgs[k].from != '<%= user.id %>')
          {
            seen.push(msgs[k].id);
            msgs[k].seen=true;
          }

        }

        if(seen.length > 0)
        {
          io.socket.post('/mark/seen', { seen:seen ,to:chat.user.id}, function (resData, jwRes) {

            console.log(jwRes.statusCode);


          });
        }
      }




    }
    $rootScope.sendMsg=function(user,event){

      if(!event || event.which == 13)
      {
        var ce = $(".conversacion [contenteditable]");
        var txt =ce.html();
        io.socket.post('/send/msg', { text:txt,to:user.id }, function (resData, jwRes) {
          console.log(jwRes.statusCode);

        });
        ce.empty();
        event.preventDefault();

      }



    };



$rootScope.isEmpty=function (obj) {

  return empty(obj);
}

    // e.g. in the browser...
    io.socket.on('user', function (event){

      console.log(event);
      if(event.data.type)
      {
        switch (event.data.type) {
          case "online-users":


            $.each(event.data.users,function (k,v) {

              if(k != '<%= user.id%>')
              {

                $rootScope.users[v.user.id]= v.user;
              }

            });



            break;

          case "status":


            if(event.data.status == true)
            {
              $rootScope.users[event.data.user.id] = event.data.user;

            }
            else
            {      delete $rootScope.users[event.data.user.id] ;

            }

            break;

          case "msg":
            if(!$rootScope.chats[event.data.from] )
            {
              $rootScope.chats[event.data.from]={messages:[],user:$rootScope.users[event.data.from]};
            }

            var user=event.data.from;
            if(user == '<%= user.id %>')
            {
              user = event.data.to;
            }
            $rootScope.chats[user].messages.push(event.data);


            goToChatBottom();

            //Si tengo el chat abierto, clavo el visto
            if(!isHidden() && $rootScope.chat)
            {

              $rootScope.markAsSeen($rootScope.chat);
            }
            else {
              var notification = new Notification($rootScope.users[event.data.from].username,{body:event.data.text});
            }


            break;
          case "seen":


            for (var k in event.data.seen)
            {

              k = event.data.seen[k];
             var idx= $rootScope.chats[event.data.from].messages.findIndex(
                function (el) {

                  return el.id == k;

                }
              );

              if(idx > -1)
              {
                $rootScope.chats[event.data.from].messages[idx].seen = event.data.time;
              }
            }




                break;
        }



        $rootScope.$apply();
      }


// => see below
    });

  });

  function goToChatBottom() {
    setTimeout(function () {

      try{
        $('.conversacion ul').scrollTop($('.conversacion ul')[0].scrollHeight);
      }
      catch(e)
      {}

    })
  }


  /*
  $(document).on("click",".conversacion .back",function () {
    $(".conversacion").fadeOut();
  });*/
  $(document).on("click",".chat:not(.conversacion) .header",function () {

    $(".chat .user").slideToggle();
    $(".chat").toggleClass("expanded");
  });

  function getHiddenProp(){
    var prefixes = ['webkit','moz','ms','o'];

    // if 'hidden' is natively supported just return it
    if ('hidden' in document) return 'hidden';

    // otherwise loop over all the known prefixes until we find one
    for (var i = 0; i < prefixes.length; i++){
      if ((prefixes[i] + 'Hidden') in document)
        return prefixes[i] + 'Hidden';
    }

    // otherwise it's not supported
    return null;
  }

  function isHidden() {
    var prop = getHiddenProp();
    if (!prop) return false;

    return document[prop];
  }

  $(document).on("keypress","[contenteditable]", function () {
    $(this).scrollTop($(this)[0].scrollHeight);
  });
</script>
